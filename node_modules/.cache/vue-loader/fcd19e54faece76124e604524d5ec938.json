{"remainingRequest":"C:\\Users\\Mr.Ye\\Desktop\\vue数据中心\\datacenter\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Mr.Ye\\Desktop\\vue数据中心\\datacenter\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Mr.Ye\\Desktop\\vue数据中心\\datacenter\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mr.Ye\\Desktop\\vue数据中心\\datacenter\\src\\views\\DataCenter.vue?vue&type=template&id=7ffc8ad9&scoped=true&xmlns%3Av-slot=http%3A%2F%2Fwww.w3.org%2F1999%2FXSL%2FTransform&","dependencies":[{"path":"C:\\Users\\Mr.Ye\\Desktop\\vue数据中心\\datacenter\\src\\views\\DataCenter.vue","mtime":1602726523747},{"path":"C:\\Users\\Mr.Ye\\Desktop\\vue数据中心\\datacenter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.Ye\\Desktop\\vue数据中心\\datacenter\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Mr.Ye\\Desktop\\vue数据中心\\datacenter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Mr.Ye\\Desktop\\vue数据中心\\datacenter\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}